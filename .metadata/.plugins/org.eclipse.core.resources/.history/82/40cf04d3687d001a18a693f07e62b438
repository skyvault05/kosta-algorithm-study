package algorithm_study.ex0413;

class Solution {
    public int solution(int[][] board, int[] moves) {
        int answer = 0;
        boolean flag = true;
        int counter = 0;
        int[] container = new int[moves.length];
        int N = board.length;
        
        for(int i : moves) {
        	i--;
        	
        	for(int j=0; j<N; j++) {
        		if(board[j][i]!=0) {
        			container[counter]=board[j][i];
        			for(int z : container) {
                		System.out.print(z);
                	}
                	System.out.println();
                	System.out.println(answer);
        			int before = (counter-1 < 0) ? -20 : container[counter-1];
        			if(container[counter] == before) {
        				container[counter] = 0;
        				counter--;
        				answer++;
        				flag=false;
        				break;
        			}
        		}
        	}
        	if(flag) {
        		counter++;
        	}else {
        		flag=true;
        	}
        	
        	
        }
        System.out.println("ans:"+answer);
        return answer;
    }
    
    public static void main(String[] args) {
		Solution s = new Solution();
		int board[][] = {{0,0,0,0,0},{0,0,1,0,3},{0,2,5,0,1},{4,2,4,4,2},{3,5,1,3,1}};
		int[] moves = {1,5,3,5,1,2,1,4};
		s.solution(board, moves);
	}
}
